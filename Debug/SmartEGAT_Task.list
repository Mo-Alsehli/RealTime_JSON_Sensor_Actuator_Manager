
SmartEGAT_Task.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000434  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000564  08000564  00020004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000564  08000564  00020004  2**0
                  CONTENTS
  4 .ARM          00000000  08000564  08000564  00020004  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000564  08000564  00020004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000564  08000564  00010564  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000568  08000568  00010568  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000004  20000000  0800056c  00020000  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000078  20000004  08000570  00020004  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000007c  08000570  0002007c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020004  2**0
                  CONTENTS, READONLY
 12 .debug_info   00002f3f  00000000  00000000  0002002d  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00000858  00000000  00000000  00022f6c  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000188  00000000  00000000  000237c8  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000140  00000000  00000000  00023950  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00002653  00000000  00000000  00023a90  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00001b39  00000000  00000000  000260e3  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    0000a259  00000000  00000000  00027c1c  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  00031e75  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000049c  00000000  00000000  00031ef0  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000004 	.word	0x20000004
 800014c:	00000000 	.word	0x00000000
 8000150:	0800054c 	.word	0x0800054c

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000008 	.word	0x20000008
 800016c:	0800054c 	.word	0x0800054c

08000170 <EXTI0_IRQHandler>:
 * ===================================================================
 * 							ISR Functions
 * ===================================================================
 */

void EXTI0_IRQHandler(void){
 8000170:	b580      	push	{r7, lr}
 8000172:	af00      	add	r7, sp, #0
	EXTI->PR |= (1 << 0);
 8000174:	4b05      	ldr	r3, [pc, #20]	; (800018c <EXTI0_IRQHandler+0x1c>)
 8000176:	695b      	ldr	r3, [r3, #20]
 8000178:	4a04      	ldr	r2, [pc, #16]	; (800018c <EXTI0_IRQHandler+0x1c>)
 800017a:	f043 0301 	orr.w	r3, r3, #1
 800017e:	6153      	str	r3, [r2, #20]
	// Call IRQ_Callback.
	GP_IRQ_Callback[0]();
 8000180:	4b03      	ldr	r3, [pc, #12]	; (8000190 <EXTI0_IRQHandler+0x20>)
 8000182:	681b      	ldr	r3, [r3, #0]
 8000184:	4798      	blx	r3
}
 8000186:	bf00      	nop
 8000188:	bd80      	pop	{r7, pc}
 800018a:	bf00      	nop
 800018c:	40010400 	.word	0x40010400
 8000190:	20000028 	.word	0x20000028

08000194 <EXTI1_IRQHandler>:

void EXTI1_IRQHandler(void){
 8000194:	b580      	push	{r7, lr}
 8000196:	af00      	add	r7, sp, #0
	EXTI->PR |= (1 << 1);
 8000198:	4b05      	ldr	r3, [pc, #20]	; (80001b0 <EXTI1_IRQHandler+0x1c>)
 800019a:	695b      	ldr	r3, [r3, #20]
 800019c:	4a04      	ldr	r2, [pc, #16]	; (80001b0 <EXTI1_IRQHandler+0x1c>)
 800019e:	f043 0302 	orr.w	r3, r3, #2
 80001a2:	6153      	str	r3, [r2, #20]
	// Call IRQ_Callback.
	GP_IRQ_Callback[1]();
 80001a4:	4b03      	ldr	r3, [pc, #12]	; (80001b4 <EXTI1_IRQHandler+0x20>)
 80001a6:	685b      	ldr	r3, [r3, #4]
 80001a8:	4798      	blx	r3
}
 80001aa:	bf00      	nop
 80001ac:	bd80      	pop	{r7, pc}
 80001ae:	bf00      	nop
 80001b0:	40010400 	.word	0x40010400
 80001b4:	20000028 	.word	0x20000028

080001b8 <EXTI2_IRQHandler>:

void EXTI2_IRQHandler(void){
 80001b8:	b580      	push	{r7, lr}
 80001ba:	af00      	add	r7, sp, #0
	EXTI->PR |= (1 << 2);
 80001bc:	4b05      	ldr	r3, [pc, #20]	; (80001d4 <EXTI2_IRQHandler+0x1c>)
 80001be:	695b      	ldr	r3, [r3, #20]
 80001c0:	4a04      	ldr	r2, [pc, #16]	; (80001d4 <EXTI2_IRQHandler+0x1c>)
 80001c2:	f043 0304 	orr.w	r3, r3, #4
 80001c6:	6153      	str	r3, [r2, #20]
	// Call IRQ_Callback.
	GP_IRQ_Callback[2]();
 80001c8:	4b03      	ldr	r3, [pc, #12]	; (80001d8 <EXTI2_IRQHandler+0x20>)
 80001ca:	689b      	ldr	r3, [r3, #8]
 80001cc:	4798      	blx	r3
}
 80001ce:	bf00      	nop
 80001d0:	bd80      	pop	{r7, pc}
 80001d2:	bf00      	nop
 80001d4:	40010400 	.word	0x40010400
 80001d8:	20000028 	.word	0x20000028

080001dc <EXTI3_IRQHandler>:

void EXTI3_IRQHandler(void){
 80001dc:	b580      	push	{r7, lr}
 80001de:	af00      	add	r7, sp, #0
	EXTI->PR |= (1 << 3);
 80001e0:	4b05      	ldr	r3, [pc, #20]	; (80001f8 <EXTI3_IRQHandler+0x1c>)
 80001e2:	695b      	ldr	r3, [r3, #20]
 80001e4:	4a04      	ldr	r2, [pc, #16]	; (80001f8 <EXTI3_IRQHandler+0x1c>)
 80001e6:	f043 0308 	orr.w	r3, r3, #8
 80001ea:	6153      	str	r3, [r2, #20]
	// Call IRQ_Callback.
	GP_IRQ_Callback[3]();
 80001ec:	4b03      	ldr	r3, [pc, #12]	; (80001fc <EXTI3_IRQHandler+0x20>)
 80001ee:	68db      	ldr	r3, [r3, #12]
 80001f0:	4798      	blx	r3
}
 80001f2:	bf00      	nop
 80001f4:	bd80      	pop	{r7, pc}
 80001f6:	bf00      	nop
 80001f8:	40010400 	.word	0x40010400
 80001fc:	20000028 	.word	0x20000028

08000200 <EXTI4_IRQHandler>:

void EXTI4_IRQHandler(void){
 8000200:	b580      	push	{r7, lr}
 8000202:	af00      	add	r7, sp, #0
	EXTI->PR |= (1 << 4);
 8000204:	4b05      	ldr	r3, [pc, #20]	; (800021c <EXTI4_IRQHandler+0x1c>)
 8000206:	695b      	ldr	r3, [r3, #20]
 8000208:	4a04      	ldr	r2, [pc, #16]	; (800021c <EXTI4_IRQHandler+0x1c>)
 800020a:	f043 0310 	orr.w	r3, r3, #16
 800020e:	6153      	str	r3, [r2, #20]
	// Call IRQ_Callback.
	GP_IRQ_Callback[4]();
 8000210:	4b03      	ldr	r3, [pc, #12]	; (8000220 <EXTI4_IRQHandler+0x20>)
 8000212:	691b      	ldr	r3, [r3, #16]
 8000214:	4798      	blx	r3
}
 8000216:	bf00      	nop
 8000218:	bd80      	pop	{r7, pc}
 800021a:	bf00      	nop
 800021c:	40010400 	.word	0x40010400
 8000220:	20000028 	.word	0x20000028

08000224 <EXTI9_5_IRQHandler>:

void EXTI9_5_IRQHandler(void){
 8000224:	b580      	push	{r7, lr}
 8000226:	af00      	add	r7, sp, #0
	if(EXTI->PR & 1 << 5){
 8000228:	4b26      	ldr	r3, [pc, #152]	; (80002c4 <EXTI9_5_IRQHandler+0xa0>)
 800022a:	695b      	ldr	r3, [r3, #20]
 800022c:	f003 0320 	and.w	r3, r3, #32
 8000230:	2b00      	cmp	r3, #0
 8000232:	d008      	beq.n	8000246 <EXTI9_5_IRQHandler+0x22>
		EXTI->PR |= 1 << 5;
 8000234:	4b23      	ldr	r3, [pc, #140]	; (80002c4 <EXTI9_5_IRQHandler+0xa0>)
 8000236:	695b      	ldr	r3, [r3, #20]
 8000238:	4a22      	ldr	r2, [pc, #136]	; (80002c4 <EXTI9_5_IRQHandler+0xa0>)
 800023a:	f043 0320 	orr.w	r3, r3, #32
 800023e:	6153      	str	r3, [r2, #20]
		GP_IRQ_Callback[5]();
 8000240:	4b21      	ldr	r3, [pc, #132]	; (80002c8 <EXTI9_5_IRQHandler+0xa4>)
 8000242:	695b      	ldr	r3, [r3, #20]
 8000244:	4798      	blx	r3
	}
	if(EXTI->PR & 1 << 6){
 8000246:	4b1f      	ldr	r3, [pc, #124]	; (80002c4 <EXTI9_5_IRQHandler+0xa0>)
 8000248:	695b      	ldr	r3, [r3, #20]
 800024a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800024e:	2b00      	cmp	r3, #0
 8000250:	d008      	beq.n	8000264 <EXTI9_5_IRQHandler+0x40>
		EXTI->PR |= 1 << 6;
 8000252:	4b1c      	ldr	r3, [pc, #112]	; (80002c4 <EXTI9_5_IRQHandler+0xa0>)
 8000254:	695b      	ldr	r3, [r3, #20]
 8000256:	4a1b      	ldr	r2, [pc, #108]	; (80002c4 <EXTI9_5_IRQHandler+0xa0>)
 8000258:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800025c:	6153      	str	r3, [r2, #20]
		GP_IRQ_Callback[6]();
 800025e:	4b1a      	ldr	r3, [pc, #104]	; (80002c8 <EXTI9_5_IRQHandler+0xa4>)
 8000260:	699b      	ldr	r3, [r3, #24]
 8000262:	4798      	blx	r3
	}
	if(EXTI->PR & 1 << 7){
 8000264:	4b17      	ldr	r3, [pc, #92]	; (80002c4 <EXTI9_5_IRQHandler+0xa0>)
 8000266:	695b      	ldr	r3, [r3, #20]
 8000268:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800026c:	2b00      	cmp	r3, #0
 800026e:	d008      	beq.n	8000282 <EXTI9_5_IRQHandler+0x5e>
		EXTI->PR |= 1 << 7;
 8000270:	4b14      	ldr	r3, [pc, #80]	; (80002c4 <EXTI9_5_IRQHandler+0xa0>)
 8000272:	695b      	ldr	r3, [r3, #20]
 8000274:	4a13      	ldr	r2, [pc, #76]	; (80002c4 <EXTI9_5_IRQHandler+0xa0>)
 8000276:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800027a:	6153      	str	r3, [r2, #20]
		GP_IRQ_Callback[7]();
 800027c:	4b12      	ldr	r3, [pc, #72]	; (80002c8 <EXTI9_5_IRQHandler+0xa4>)
 800027e:	69db      	ldr	r3, [r3, #28]
 8000280:	4798      	blx	r3
	}
	if(EXTI->PR & 1 << 8){
 8000282:	4b10      	ldr	r3, [pc, #64]	; (80002c4 <EXTI9_5_IRQHandler+0xa0>)
 8000284:	695b      	ldr	r3, [r3, #20]
 8000286:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800028a:	2b00      	cmp	r3, #0
 800028c:	d008      	beq.n	80002a0 <EXTI9_5_IRQHandler+0x7c>
		EXTI->PR |= 1 << 8;
 800028e:	4b0d      	ldr	r3, [pc, #52]	; (80002c4 <EXTI9_5_IRQHandler+0xa0>)
 8000290:	695b      	ldr	r3, [r3, #20]
 8000292:	4a0c      	ldr	r2, [pc, #48]	; (80002c4 <EXTI9_5_IRQHandler+0xa0>)
 8000294:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000298:	6153      	str	r3, [r2, #20]
		GP_IRQ_Callback[8]();
 800029a:	4b0b      	ldr	r3, [pc, #44]	; (80002c8 <EXTI9_5_IRQHandler+0xa4>)
 800029c:	6a1b      	ldr	r3, [r3, #32]
 800029e:	4798      	blx	r3
	}
	if(EXTI->PR & 1 << 9){
 80002a0:	4b08      	ldr	r3, [pc, #32]	; (80002c4 <EXTI9_5_IRQHandler+0xa0>)
 80002a2:	695b      	ldr	r3, [r3, #20]
 80002a4:	f403 7300 	and.w	r3, r3, #512	; 0x200
 80002a8:	2b00      	cmp	r3, #0
 80002aa:	d008      	beq.n	80002be <EXTI9_5_IRQHandler+0x9a>
		EXTI->PR |= 1 << 9;
 80002ac:	4b05      	ldr	r3, [pc, #20]	; (80002c4 <EXTI9_5_IRQHandler+0xa0>)
 80002ae:	695b      	ldr	r3, [r3, #20]
 80002b0:	4a04      	ldr	r2, [pc, #16]	; (80002c4 <EXTI9_5_IRQHandler+0xa0>)
 80002b2:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80002b6:	6153      	str	r3, [r2, #20]
		GP_IRQ_Callback[9]();
 80002b8:	4b03      	ldr	r3, [pc, #12]	; (80002c8 <EXTI9_5_IRQHandler+0xa4>)
 80002ba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80002bc:	4798      	blx	r3
	}
}
 80002be:	bf00      	nop
 80002c0:	bd80      	pop	{r7, pc}
 80002c2:	bf00      	nop
 80002c4:	40010400 	.word	0x40010400
 80002c8:	20000028 	.word	0x20000028

080002cc <EXTI15_10_IRQHandler>:
void EXTI15_10_IRQHandler(void){
 80002cc:	b580      	push	{r7, lr}
 80002ce:	af00      	add	r7, sp, #0
	if(EXTI->PR & 1 << 10){
 80002d0:	4b35      	ldr	r3, [pc, #212]	; (80003a8 <EXTI15_10_IRQHandler+0xdc>)
 80002d2:	695b      	ldr	r3, [r3, #20]
 80002d4:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80002d8:	2b00      	cmp	r3, #0
 80002da:	d008      	beq.n	80002ee <EXTI15_10_IRQHandler+0x22>
		EXTI->PR |= 1 << 10;
 80002dc:	4b32      	ldr	r3, [pc, #200]	; (80003a8 <EXTI15_10_IRQHandler+0xdc>)
 80002de:	695b      	ldr	r3, [r3, #20]
 80002e0:	4a31      	ldr	r2, [pc, #196]	; (80003a8 <EXTI15_10_IRQHandler+0xdc>)
 80002e2:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80002e6:	6153      	str	r3, [r2, #20]
		GP_IRQ_Callback[10]();
 80002e8:	4b30      	ldr	r3, [pc, #192]	; (80003ac <EXTI15_10_IRQHandler+0xe0>)
 80002ea:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80002ec:	4798      	blx	r3
	}
	if(EXTI->PR & 1 << 10){
 80002ee:	4b2e      	ldr	r3, [pc, #184]	; (80003a8 <EXTI15_10_IRQHandler+0xdc>)
 80002f0:	695b      	ldr	r3, [r3, #20]
 80002f2:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80002f6:	2b00      	cmp	r3, #0
 80002f8:	d008      	beq.n	800030c <EXTI15_10_IRQHandler+0x40>
		EXTI->PR |= 1 << 10;
 80002fa:	4b2b      	ldr	r3, [pc, #172]	; (80003a8 <EXTI15_10_IRQHandler+0xdc>)
 80002fc:	695b      	ldr	r3, [r3, #20]
 80002fe:	4a2a      	ldr	r2, [pc, #168]	; (80003a8 <EXTI15_10_IRQHandler+0xdc>)
 8000300:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8000304:	6153      	str	r3, [r2, #20]
		GP_IRQ_Callback[10]();
 8000306:	4b29      	ldr	r3, [pc, #164]	; (80003ac <EXTI15_10_IRQHandler+0xe0>)
 8000308:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800030a:	4798      	blx	r3
	}
	if(EXTI->PR & 1 << 11){
 800030c:	4b26      	ldr	r3, [pc, #152]	; (80003a8 <EXTI15_10_IRQHandler+0xdc>)
 800030e:	695b      	ldr	r3, [r3, #20]
 8000310:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8000314:	2b00      	cmp	r3, #0
 8000316:	d008      	beq.n	800032a <EXTI15_10_IRQHandler+0x5e>
		EXTI->PR |= 1 << 11;
 8000318:	4b23      	ldr	r3, [pc, #140]	; (80003a8 <EXTI15_10_IRQHandler+0xdc>)
 800031a:	695b      	ldr	r3, [r3, #20]
 800031c:	4a22      	ldr	r2, [pc, #136]	; (80003a8 <EXTI15_10_IRQHandler+0xdc>)
 800031e:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8000322:	6153      	str	r3, [r2, #20]
		GP_IRQ_Callback[11]();
 8000324:	4b21      	ldr	r3, [pc, #132]	; (80003ac <EXTI15_10_IRQHandler+0xe0>)
 8000326:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8000328:	4798      	blx	r3
	}
	if(EXTI->PR & 1 << 12){
 800032a:	4b1f      	ldr	r3, [pc, #124]	; (80003a8 <EXTI15_10_IRQHandler+0xdc>)
 800032c:	695b      	ldr	r3, [r3, #20]
 800032e:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8000332:	2b00      	cmp	r3, #0
 8000334:	d008      	beq.n	8000348 <EXTI15_10_IRQHandler+0x7c>
		EXTI->PR |= 1 << 12;
 8000336:	4b1c      	ldr	r3, [pc, #112]	; (80003a8 <EXTI15_10_IRQHandler+0xdc>)
 8000338:	695b      	ldr	r3, [r3, #20]
 800033a:	4a1b      	ldr	r2, [pc, #108]	; (80003a8 <EXTI15_10_IRQHandler+0xdc>)
 800033c:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8000340:	6153      	str	r3, [r2, #20]
		GP_IRQ_Callback[12]();
 8000342:	4b1a      	ldr	r3, [pc, #104]	; (80003ac <EXTI15_10_IRQHandler+0xe0>)
 8000344:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000346:	4798      	blx	r3
	}
	if(EXTI->PR & 1 << 13){
 8000348:	4b17      	ldr	r3, [pc, #92]	; (80003a8 <EXTI15_10_IRQHandler+0xdc>)
 800034a:	695b      	ldr	r3, [r3, #20]
 800034c:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8000350:	2b00      	cmp	r3, #0
 8000352:	d008      	beq.n	8000366 <EXTI15_10_IRQHandler+0x9a>
		EXTI->PR |= 1 << 13;
 8000354:	4b14      	ldr	r3, [pc, #80]	; (80003a8 <EXTI15_10_IRQHandler+0xdc>)
 8000356:	695b      	ldr	r3, [r3, #20]
 8000358:	4a13      	ldr	r2, [pc, #76]	; (80003a8 <EXTI15_10_IRQHandler+0xdc>)
 800035a:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800035e:	6153      	str	r3, [r2, #20]
		GP_IRQ_Callback[13]();
 8000360:	4b12      	ldr	r3, [pc, #72]	; (80003ac <EXTI15_10_IRQHandler+0xe0>)
 8000362:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8000364:	4798      	blx	r3
	}
	if(EXTI->PR & 1 << 14){
 8000366:	4b10      	ldr	r3, [pc, #64]	; (80003a8 <EXTI15_10_IRQHandler+0xdc>)
 8000368:	695b      	ldr	r3, [r3, #20]
 800036a:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800036e:	2b00      	cmp	r3, #0
 8000370:	d008      	beq.n	8000384 <EXTI15_10_IRQHandler+0xb8>
		EXTI->PR |= 1 << 14;
 8000372:	4b0d      	ldr	r3, [pc, #52]	; (80003a8 <EXTI15_10_IRQHandler+0xdc>)
 8000374:	695b      	ldr	r3, [r3, #20]
 8000376:	4a0c      	ldr	r2, [pc, #48]	; (80003a8 <EXTI15_10_IRQHandler+0xdc>)
 8000378:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800037c:	6153      	str	r3, [r2, #20]
		GP_IRQ_Callback[14]();
 800037e:	4b0b      	ldr	r3, [pc, #44]	; (80003ac <EXTI15_10_IRQHandler+0xe0>)
 8000380:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8000382:	4798      	blx	r3
	}
	if(EXTI->PR & 1 << 15){
 8000384:	4b08      	ldr	r3, [pc, #32]	; (80003a8 <EXTI15_10_IRQHandler+0xdc>)
 8000386:	695b      	ldr	r3, [r3, #20]
 8000388:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 800038c:	2b00      	cmp	r3, #0
 800038e:	d008      	beq.n	80003a2 <EXTI15_10_IRQHandler+0xd6>
		EXTI->PR |= 1 << 15;
 8000390:	4b05      	ldr	r3, [pc, #20]	; (80003a8 <EXTI15_10_IRQHandler+0xdc>)
 8000392:	695b      	ldr	r3, [r3, #20]
 8000394:	4a04      	ldr	r2, [pc, #16]	; (80003a8 <EXTI15_10_IRQHandler+0xdc>)
 8000396:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800039a:	6153      	str	r3, [r2, #20]
		GP_IRQ_Callback[15]();
 800039c:	4b03      	ldr	r3, [pc, #12]	; (80003ac <EXTI15_10_IRQHandler+0xe0>)
 800039e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80003a0:	4798      	blx	r3
	}
}
 80003a2:	bf00      	nop
 80003a4:	bd80      	pop	{r7, pc}
 80003a6:	bf00      	nop
 80003a8:	40010400 	.word	0x40010400
 80003ac:	20000028 	.word	0x20000028

080003b0 <TIM2_IRQHandler>:


// Timer ISR() Handler

// IRQ for delay Function with Timer2
void TIM2_IRQHandler(){
 80003b0:	b480      	push	{r7}
 80003b2:	af00      	add	r7, sp, #0
	TIM2->SR &= ~(1 << 0); // Update Interrupt Flag
 80003b4:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80003b8:	691b      	ldr	r3, [r3, #16]
 80003ba:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80003be:	f023 0301 	bic.w	r3, r3, #1
 80003c2:	6113      	str	r3, [r2, #16]
	delayFlag = 0;
 80003c4:	4b07      	ldr	r3, [pc, #28]	; (80003e4 <TIM2_IRQHandler+0x34>)
 80003c6:	2200      	movs	r2, #0
 80003c8:	701a      	strb	r2, [r3, #0]

	TIM2->CR1 &= ~(1<<CEN);
 80003ca:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80003ce:	681b      	ldr	r3, [r3, #0]
 80003d0:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80003d4:	f023 0301 	bic.w	r3, r3, #1
 80003d8:	6013      	str	r3, [r2, #0]
}
 80003da:	bf00      	nop
 80003dc:	46bd      	mov	sp, r7
 80003de:	bc80      	pop	{r7}
 80003e0:	4770      	bx	lr
 80003e2:	bf00      	nop
 80003e4:	20000000 	.word	0x20000000

080003e8 <TIM1_UP_IRQHandler>:


void TIM1_UP_IRQHandler() {
 80003e8:	b480      	push	{r7}
 80003ea:	af00      	add	r7, sp, #0
        // Clear the update interrupt flag
        TIM1->SR &= ~(1 << 0);
 80003ec:	4b07      	ldr	r3, [pc, #28]	; (800040c <TIM1_UP_IRQHandler+0x24>)
 80003ee:	691b      	ldr	r3, [r3, #16]
 80003f0:	4a06      	ldr	r2, [pc, #24]	; (800040c <TIM1_UP_IRQHandler+0x24>)
 80003f2:	f023 0301 	bic.w	r3, r3, #1
 80003f6:	6113      	str	r3, [r2, #16]
    	overflowTimsTIM1++;
 80003f8:	4b05      	ldr	r3, [pc, #20]	; (8000410 <TIM1_UP_IRQHandler+0x28>)
 80003fa:	881b      	ldrh	r3, [r3, #0]
 80003fc:	3301      	adds	r3, #1
 80003fe:	b29a      	uxth	r2, r3
 8000400:	4b03      	ldr	r3, [pc, #12]	; (8000410 <TIM1_UP_IRQHandler+0x28>)
 8000402:	801a      	strh	r2, [r3, #0]
}
 8000404:	bf00      	nop
 8000406:	46bd      	mov	sp, r7
 8000408:	bc80      	pop	{r7}
 800040a:	4770      	bx	lr
 800040c:	40012c00 	.word	0x40012c00
 8000410:	20000024 	.word	0x20000024

08000414 <TIM3_IRQHandler>:


void TIM3_IRQHandler(){
 8000414:	b480      	push	{r7}
 8000416:	af00      	add	r7, sp, #0
	TIM3->SR &= ~(1 << 0);
 8000418:	4b07      	ldr	r3, [pc, #28]	; (8000438 <TIM3_IRQHandler+0x24>)
 800041a:	691b      	ldr	r3, [r3, #16]
 800041c:	4a06      	ldr	r2, [pc, #24]	; (8000438 <TIM3_IRQHandler+0x24>)
 800041e:	f023 0301 	bic.w	r3, r3, #1
 8000422:	6113      	str	r3, [r2, #16]
	overflowTimsTIM3++;
 8000424:	4b05      	ldr	r3, [pc, #20]	; (800043c <TIM3_IRQHandler+0x28>)
 8000426:	881b      	ldrh	r3, [r3, #0]
 8000428:	3301      	adds	r3, #1
 800042a:	b29a      	uxth	r2, r3
 800042c:	4b03      	ldr	r3, [pc, #12]	; (800043c <TIM3_IRQHandler+0x28>)
 800042e:	801a      	strh	r2, [r3, #0]
}
 8000430:	bf00      	nop
 8000432:	46bd      	mov	sp, r7
 8000434:	bc80      	pop	{r7}
 8000436:	4770      	bx	lr
 8000438:	40000400 	.word	0x40000400
 800043c:	20000022 	.word	0x20000022

08000440 <TIM4_IRQHandler>:
// IRQ for timeCalc function with Timer4.
void TIM4_IRQHandler(){
 8000440:	b480      	push	{r7}
 8000442:	af00      	add	r7, sp, #0
	TIM4->SR &= ~(1 << 0);
 8000444:	4b07      	ldr	r3, [pc, #28]	; (8000464 <TIM4_IRQHandler+0x24>)
 8000446:	691b      	ldr	r3, [r3, #16]
 8000448:	4a06      	ldr	r2, [pc, #24]	; (8000464 <TIM4_IRQHandler+0x24>)
 800044a:	f023 0301 	bic.w	r3, r3, #1
 800044e:	6113      	str	r3, [r2, #16]
	overflowTimsTIM4++;
 8000450:	4b05      	ldr	r3, [pc, #20]	; (8000468 <TIM4_IRQHandler+0x28>)
 8000452:	881b      	ldrh	r3, [r3, #0]
 8000454:	3301      	adds	r3, #1
 8000456:	b29a      	uxth	r2, r3
 8000458:	4b03      	ldr	r3, [pc, #12]	; (8000468 <TIM4_IRQHandler+0x28>)
 800045a:	801a      	strh	r2, [r3, #0]
}
 800045c:	bf00      	nop
 800045e:	46bd      	mov	sp, r7
 8000460:	bc80      	pop	{r7}
 8000462:	4770      	bx	lr
 8000464:	40000800 	.word	0x40000800
 8000468:	20000020 	.word	0x20000020

0800046c <USART1_IRQHandler>:




// ISR()
void USART1_IRQHandler(){
 800046c:	b580      	push	{r7, lr}
 800046e:	af00      	add	r7, sp, #0
	UARTGlobalCfg[0]->P_IRQ_Callback();
 8000470:	4b02      	ldr	r3, [pc, #8]	; (800047c <USART1_IRQHandler+0x10>)
 8000472:	681b      	ldr	r3, [r3, #0]
 8000474:	691b      	ldr	r3, [r3, #16]
 8000476:	4798      	blx	r3
}
 8000478:	bf00      	nop
 800047a:	bd80      	pop	{r7, pc}
 800047c:	20000070 	.word	0x20000070

08000480 <USART2_IRQHandler>:

void USART2_IRQHandler(){
 8000480:	b580      	push	{r7, lr}
 8000482:	af00      	add	r7, sp, #0
	UARTGlobalCfg[1]->P_IRQ_Callback();
 8000484:	4b02      	ldr	r3, [pc, #8]	; (8000490 <USART2_IRQHandler+0x10>)
 8000486:	685b      	ldr	r3, [r3, #4]
 8000488:	691b      	ldr	r3, [r3, #16]
 800048a:	4798      	blx	r3
}
 800048c:	bf00      	nop
 800048e:	bd80      	pop	{r7, pc}
 8000490:	20000070 	.word	0x20000070

08000494 <USART3_IRQHandler>:

void USART3_IRQHandler(){
 8000494:	b580      	push	{r7, lr}
 8000496:	af00      	add	r7, sp, #0
	UARTGlobalCfg[2]->P_IRQ_Callback();
 8000498:	4b02      	ldr	r3, [pc, #8]	; (80004a4 <USART3_IRQHandler+0x10>)
 800049a:	689b      	ldr	r3, [r3, #8]
 800049c:	691b      	ldr	r3, [r3, #16]
 800049e:	4798      	blx	r3
}
 80004a0:	bf00      	nop
 80004a2:	bd80      	pop	{r7, pc}
 80004a4:	20000070 	.word	0x20000070

080004a8 <main>:
#include "UART.h"
#include "RCC.h"


int main(void)
{
 80004a8:	b480      	push	{r7}
 80004aa:	af00      	add	r7, sp, #0
    /* Loop forever */
	for(;;);
 80004ac:	e7fe      	b.n	80004ac <main+0x4>
	...

080004b0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80004b0:	480d      	ldr	r0, [pc, #52]	; (80004e8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80004b2:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 80004b4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80004b8:	480c      	ldr	r0, [pc, #48]	; (80004ec <LoopForever+0x6>)
  ldr r1, =_edata
 80004ba:	490d      	ldr	r1, [pc, #52]	; (80004f0 <LoopForever+0xa>)
  ldr r2, =_sidata
 80004bc:	4a0d      	ldr	r2, [pc, #52]	; (80004f4 <LoopForever+0xe>)
  movs r3, #0
 80004be:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80004c0:	e002      	b.n	80004c8 <LoopCopyDataInit>

080004c2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80004c2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80004c4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80004c6:	3304      	adds	r3, #4

080004c8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80004c8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80004ca:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80004cc:	d3f9      	bcc.n	80004c2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80004ce:	4a0a      	ldr	r2, [pc, #40]	; (80004f8 <LoopForever+0x12>)
  ldr r4, =_ebss
 80004d0:	4c0a      	ldr	r4, [pc, #40]	; (80004fc <LoopForever+0x16>)
  movs r3, #0
 80004d2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80004d4:	e001      	b.n	80004da <LoopFillZerobss>

080004d6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80004d6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80004d8:	3204      	adds	r2, #4

080004da <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80004da:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80004dc:	d3fb      	bcc.n	80004d6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80004de:	f000 f811 	bl	8000504 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80004e2:	f7ff ffe1 	bl	80004a8 <main>

080004e6 <LoopForever>:

LoopForever:
    b LoopForever
 80004e6:	e7fe      	b.n	80004e6 <LoopForever>
  ldr   r0, =_estack
 80004e8:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 80004ec:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80004f0:	20000004 	.word	0x20000004
  ldr r2, =_sidata
 80004f4:	0800056c 	.word	0x0800056c
  ldr r2, =_sbss
 80004f8:	20000004 	.word	0x20000004
  ldr r4, =_ebss
 80004fc:	2000007c 	.word	0x2000007c

08000500 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000500:	e7fe      	b.n	8000500 <ADC1_2_IRQHandler>
	...

08000504 <__libc_init_array>:
 8000504:	b570      	push	{r4, r5, r6, lr}
 8000506:	2500      	movs	r5, #0
 8000508:	4e0c      	ldr	r6, [pc, #48]	; (800053c <__libc_init_array+0x38>)
 800050a:	4c0d      	ldr	r4, [pc, #52]	; (8000540 <__libc_init_array+0x3c>)
 800050c:	1ba4      	subs	r4, r4, r6
 800050e:	10a4      	asrs	r4, r4, #2
 8000510:	42a5      	cmp	r5, r4
 8000512:	d109      	bne.n	8000528 <__libc_init_array+0x24>
 8000514:	f000 f81a 	bl	800054c <_init>
 8000518:	2500      	movs	r5, #0
 800051a:	4e0a      	ldr	r6, [pc, #40]	; (8000544 <__libc_init_array+0x40>)
 800051c:	4c0a      	ldr	r4, [pc, #40]	; (8000548 <__libc_init_array+0x44>)
 800051e:	1ba4      	subs	r4, r4, r6
 8000520:	10a4      	asrs	r4, r4, #2
 8000522:	42a5      	cmp	r5, r4
 8000524:	d105      	bne.n	8000532 <__libc_init_array+0x2e>
 8000526:	bd70      	pop	{r4, r5, r6, pc}
 8000528:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800052c:	4798      	blx	r3
 800052e:	3501      	adds	r5, #1
 8000530:	e7ee      	b.n	8000510 <__libc_init_array+0xc>
 8000532:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000536:	4798      	blx	r3
 8000538:	3501      	adds	r5, #1
 800053a:	e7f2      	b.n	8000522 <__libc_init_array+0x1e>
 800053c:	08000564 	.word	0x08000564
 8000540:	08000564 	.word	0x08000564
 8000544:	08000564 	.word	0x08000564
 8000548:	08000568 	.word	0x08000568

0800054c <_init>:
 800054c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800054e:	bf00      	nop
 8000550:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000552:	bc08      	pop	{r3}
 8000554:	469e      	mov	lr, r3
 8000556:	4770      	bx	lr

08000558 <_fini>:
 8000558:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800055a:	bf00      	nop
 800055c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800055e:	bc08      	pop	{r3}
 8000560:	469e      	mov	lr, r3
 8000562:	4770      	bx	lr
